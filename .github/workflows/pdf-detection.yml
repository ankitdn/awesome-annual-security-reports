name: PDF Detection

on:
  push:
    branches:
      - main
      - development
    paths:
      - 'Annual Security Reports/**/*.pdf'
  pull_request:
    branches:
      - main
      - development
    paths:
      - 'Annual Security Reports/**/*.pdf'

jobs:
  detect-pdf:
    runs-on: ubuntu-latest
    outputs:
      pdf_file_path: ${{ steps.find-pdf.outputs.pdf_file_path }}
      year_folder: ${{ steps.extract-info.outputs.year_folder }}
      base_filename: ${{ steps.extract-info.outputs.base_filename }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Find changed PDF files
        id: find-pdf
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For pull requests, find added or modified PDFs
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep -E "Annual Security Reports/.+\.pdf$" || echo "")
          else
            # For direct pushes, find added or modified PDFs
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E "Annual Security Reports/.+\.pdf$" || echo "")
          fi

          if [[ -z "$CHANGED_FILES" ]]; then
            echo "No PDF files were added or modified in the Annual Security Reports directory."
            exit 0
          fi

          # Take the first PDF file if multiple were found
          PDF_FILE=$(echo "$CHANGED_FILES" | head -n 1)
          echo "PDF file detected: $PDF_FILE"
          echo "pdf_file_path=$PDF_FILE" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract year and filename info
        id: extract-info
        if: steps.find-pdf.outputs.pdf_file_path != ''
        run: |
          PDF_PATH="${{ steps.find-pdf.outputs.pdf_file_path }}"
          
          # Extract the year folder
          YEAR_FOLDER=$(echo "$PDF_PATH" | sed -E 's|Annual Security Reports/([^/]+)/.*|\1|')
          echo "year_folder=$YEAR_FOLDER" >> $GITHUB_OUTPUT
          
          # Extract base filename without extension
          BASE_FILENAME=$(basename "$PDF_PATH" .pdf)
          echo "base_filename=$BASE_FILENAME" >> $GITHUB_OUTPUT
          
          echo "Year folder: $YEAR_FOLDER"
          echo "Base filename: $BASE_FILENAME"
        shell: bash

      - name: Trigger Falcon scan workflow
        if: steps.find-pdf.outputs.pdf_file_path != ''
        run: |
          echo "Triggering Falcon scan workflow for: ${{ steps.find-pdf.outputs.pdf_file_path }}"
          
          # Create workflow dispatch payload
          PAYLOAD=$(cat <<EOF
          {
            "ref": "${{ github.ref_name }}",
            "inputs": {
              "pdf_file_path": "${{ steps.find-pdf.outputs.pdf_file_path }}",
              "year_folder": "${{ steps.extract-info.outputs.year_folder }}",
              "base_filename": "${{ steps.extract-info.outputs.base_filename }}"
            }
          }
          EOF
          )
          
          # Trigger the workflow using GitHub API
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
            -d "$PAYLOAD" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/falcon-scan.yml/dispatches"
        shell: bash
